// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: bsdq7xoP2pzFcwsFmrBqbQ
// Component: ULVeuTxZEp
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";

import { useScreenVariants as useScreenVariantsqhVeiuw7DoWy } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: qh_VEIUW7DoWy/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_majid_cms.module.css"; // plasmic-import: bsdq7xoP2pzFcwsFmrBqbQ/projectcss
import sty from "./PlasmicAboutus.module.css"; // plasmic-import: ULVeuTxZEp/css

import Icon29Icon from "./icons/PlasmicIcon__Icon29"; // plasmic-import: apJy6ukxCAgZ/icon
import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: Wfp_Xo9VW0xk/icon
import Icon2Icon from "./icons/PlasmicIcon__Icon2"; // plasmic-import: VDlxFkaX2KjV/icon
import Icon3Icon from "./icons/PlasmicIcon__Icon3"; // plasmic-import: M1zLUtYzy300/icon

export type PlasmicAboutus__VariantMembers = {};
export type PlasmicAboutus__VariantsArgs = {};
type VariantPropType = keyof PlasmicAboutus__VariantsArgs;
export const PlasmicAboutus__VariantProps = new Array<VariantPropType>();

export type PlasmicAboutus__ArgsType = {};
type ArgPropType = keyof PlasmicAboutus__ArgsType;
export const PlasmicAboutus__ArgProps = new Array<ArgPropType>();

export type PlasmicAboutus__OverridesType = {
  root?: p.Flex<"div">;
  header?: p.Flex<"div">;
  aboutUs?: p.Flex<"a"> & Partial<LinkProps>;
  contact?: p.Flex<"div">;
  aboutUsBanner?: p.Flex<"div">;
  foreground2?: p.Flex<"div">;
  ourTeamSection?: p.Flex<"div">;
  columns?: p.Flex<"div">;
  container?: p.Flex<"div">;
  row1?: p.Flex<"div">;
  serviceRow?: p.Flex<"div">;
  foreground3?: p.Flex<"div">;
  button?: p.Flex<"button">;
  rowWrapper?: p.Flex<"div">;
  colmn1?: p.Flex<"div">;
  colmn2?: p.Flex<"div">;
  colmn22?: p.Flex<"div">;
  colmn3?: p.Flex<"div">;
};

export interface DefaultAboutusProps {}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function PlasmicAboutus__RenderFunc(props: {
  variants: PlasmicAboutus__VariantsArgs;
  args: PlasmicAboutus__ArgsType;
  overrides: PlasmicAboutus__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsqhVeiuw7DoWy()
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            sty.root
          )}
        >
          {true ? (
            <p.Stack
              as={"div"}
              data-plasmic-name={"header"}
              data-plasmic-override={overrides.header}
              hasGap={true}
              className={classNames(projectcss.all, sty.header)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__eo1Cq)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__czAbd)}
                >
                  {true ? (
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__b28S
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__cd1O5)}
                        displayHeight={"78px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"78px" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"100%" as const}
                        src={"/plasmic/majid_cms/images/image.svg"}
                      />
                    </p.PlasmicLink>
                  ) : null}

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__j7Abk)}
                  >
                    <p.Stack
                      as={p.PlasmicLink}
                      data-plasmic-name={"aboutUs"}
                      data-plasmic-override={overrides.aboutUs}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.aboutUs
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {false ? (
                        <Icon29Icon
                          className={classNames(projectcss.all, sty.svg__dcHgq)}
                          role={"img"}
                        />
                      ) : null}

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___8YiIw
                        )}
                      >
                        {"About Us"}
                      </div>

                      {false ? (
                        <Icon29Icon
                          className={classNames(projectcss.all, sty.svg__caT7Q)}
                          role={"img"}
                        />
                      ) : null}
                    </p.Stack>

                    <p.Stack
                      as={p.PlasmicLink}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__kdrl5
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {false ? (
                        <Icon29Icon
                          className={classNames(projectcss.all, sty.svg__kyWzi)}
                          role={"img"}
                        />
                      ) : null}

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___8Daw0
                        )}
                      >
                        {"Services"}
                      </div>

                      {false ? (
                        <Icon29Icon
                          className={classNames(projectcss.all, sty.svg__ok89J)}
                          role={"img"}
                        />
                      ) : null}
                    </p.Stack>

                    <p.Stack
                      as={p.PlasmicLink}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__noGZa
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {false ? (
                        <Icon29Icon
                          className={classNames(projectcss.all, sty.svg__gzKuy)}
                          role={"img"}
                        />
                      ) : null}

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__d9TIa
                        )}
                      >
                        {"Clients"}
                      </div>

                      {false ? (
                        <Icon29Icon
                          className={classNames(projectcss.all, sty.svg__uqNe)}
                          role={"img"}
                        />
                      ) : null}
                    </p.Stack>

                    <p.Stack
                      as={p.PlasmicLink}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__pyHpl
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {false ? (
                        <Icon29Icon
                          className={classNames(projectcss.all, sty.svg__qgYfj)}
                          role={"img"}
                        />
                      ) : null}

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__egxiU
                        )}
                      >
                        {"Blog"}
                      </div>

                      {false ? (
                        <Icon29Icon
                          className={classNames(projectcss.all, sty.svg__pFmUt)}
                          role={"img"}
                        />
                      ) : null}
                    </p.Stack>

                    <p.Stack
                      as={p.PlasmicLink}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__d0Duv
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {false ? (
                        <Icon29Icon
                          className={classNames(projectcss.all, sty.svg__sEJsD)}
                          role={"img"}
                        />
                      ) : null}

                      <div
                        data-plasmic-name={"contact"}
                        data-plasmic-override={overrides.contact}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.contact
                        )}
                      >
                        {"Contact Us"}
                      </div>

                      {false ? (
                        <Icon29Icon
                          className={classNames(projectcss.all, sty.svg__raYXx)}
                          role={"img"}
                        />
                      ) : null}
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          ) : null}

          <div
            data-plasmic-name={"aboutUsBanner"}
            data-plasmic-override={overrides.aboutUsBanner}
            className={classNames(projectcss.all, sty.aboutUsBanner)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"foreground2"}
              data-plasmic-override={overrides.foreground2}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground2)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__twNyu)}
              >
                <h1
                  className={classNames(
                    projectcss.all,
                    projectcss.h1,
                    projectcss.__wab_text,
                    sty.h1__w4Zkd
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "About US"
                    : "About Us"}
                </h1>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ovlyh
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "Lorem Ipsum is simply dummy text of the printing and typesetting industry."
                    : "Lorem Ipsum is simply dummy text of the printing and typesetting industry."}
                </div>
              </p.Stack>
            </p.Stack>
          </div>

          {true ? (
            <div
              data-plasmic-name={"ourTeamSection"}
              data-plasmic-override={overrides.ourTeamSection}
              className={classNames(projectcss.all, sty.ourTeamSection)}
            >
              <div
                data-plasmic-name={"columns"}
                data-plasmic-override={overrides.columns}
                className={classNames(projectcss.all, sty.columns)}
              >
                <div className={classNames(projectcss.all, sty.column__dSzl0)}>
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__cFq1T
                    )}
                  >
                    {"Our team"}
                  </h2>

                  <div
                    data-plasmic-name={"container"}
                    data-plasmic-override={overrides.container}
                    className={classNames(projectcss.all, sty.container)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"row1"}
                      data-plasmic-override={overrides.row1}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.row1)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__y1Ezk
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__jy55O
                          )}
                        >
                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img__nr0Os)}
                            displayHeight={"336px" as const}
                            displayMaxHeight={"none" as const}
                            displayMaxWidth={"100%" as const}
                            displayMinHeight={"0" as const}
                            displayMinWidth={"0" as const}
                            displayWidth={"100%" as const}
                            loading={"lazy" as const}
                          />

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__ffOjT
                            )}
                          >
                            <h1
                              className={classNames(
                                projectcss.all,
                                projectcss.h1,
                                sty.h1__w9LAg
                              )}
                            >
                              <h3
                                className={classNames(
                                  projectcss.all,
                                  projectcss.h3,
                                  projectcss.__wab_text,
                                  sty.h3__zndYg
                                )}
                              >
                                {"Lorem Ipsum"}
                              </h3>
                            </h1>

                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__vXl0B
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__wv1Oz
                                )}
                              >
                                {"Job title"}
                              </div>
                            </div>

                            {true ? (
                              <p.Stack
                                as={"div"}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox___1BA7
                                )}
                              >
                                <p.PlasmicLink
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.a,
                                    sty.link__hZhW
                                  )}
                                  component={Link}
                                  platform={"nextjs"}
                                >
                                  <IconIcon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__ukmtm
                                    )}
                                    role={"img"}
                                  />
                                </p.PlasmicLink>

                                <p.PlasmicLink
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.a,
                                    sty.link__lD06Y
                                  )}
                                  component={Link}
                                  platform={"nextjs"}
                                >
                                  <Icon2Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg___0G19K
                                    )}
                                    role={"img"}
                                  />
                                </p.PlasmicLink>

                                <p.PlasmicLink
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.a,
                                    sty.link___2LMwv
                                  )}
                                  component={Link}
                                  platform={"nextjs"}
                                >
                                  <Icon3Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__aMgDt
                                    )}
                                    role={"img"}
                                  />
                                </p.PlasmicLink>
                              </p.Stack>
                            ) : null}
                          </p.Stack>
                        </div>
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__tiyjo
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__mPoXg
                          )}
                        >
                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img___0Yxuv)}
                            displayHeight={"336px" as const}
                            displayMaxHeight={"none" as const}
                            displayMaxWidth={"100%" as const}
                            displayMinHeight={"0" as const}
                            displayMinWidth={"0" as const}
                            displayWidth={"100%" as const}
                            loading={"lazy" as const}
                          />

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__iftLr
                            )}
                          >
                            <h1
                              className={classNames(
                                projectcss.all,
                                projectcss.h1,
                                sty.h1__ze0In
                              )}
                            >
                              <h3
                                className={classNames(
                                  projectcss.all,
                                  projectcss.h3,
                                  projectcss.__wab_text,
                                  sty.h3__gApzc
                                )}
                              >
                                {"Lorem Ipsum"}
                              </h3>
                            </h1>

                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__xKu1I
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__uAVgO
                                )}
                              >
                                {"Job title"}
                              </div>
                            </div>

                            {true ? (
                              <p.Stack
                                as={"div"}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__klU3K
                                )}
                              >
                                <p.PlasmicLink
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.a,
                                    sty.link__yTGj
                                  )}
                                  component={Link}
                                  platform={"nextjs"}
                                >
                                  <IconIcon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__sZhtv
                                    )}
                                    role={"img"}
                                  />
                                </p.PlasmicLink>

                                <p.PlasmicLink
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.a,
                                    sty.link___0AusK
                                  )}
                                  component={Link}
                                  platform={"nextjs"}
                                >
                                  <Icon2Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__i1Z65
                                    )}
                                    role={"img"}
                                  />
                                </p.PlasmicLink>

                                <p.PlasmicLink
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.a,
                                    sty.link__ew2D
                                  )}
                                  component={Link}
                                  platform={"nextjs"}
                                >
                                  <Icon3Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__iSrL
                                    )}
                                    role={"img"}
                                  />
                                </p.PlasmicLink>
                              </p.Stack>
                            ) : null}
                          </p.Stack>
                        </div>
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__kwTVr
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__aJ0Dj
                          )}
                        >
                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img__s0GUm)}
                            displayHeight={"336px" as const}
                            displayMaxHeight={"none" as const}
                            displayMaxWidth={"100%" as const}
                            displayMinHeight={"0" as const}
                            displayMinWidth={"0" as const}
                            displayWidth={"100%" as const}
                            loading={"lazy" as const}
                          />

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__xzRjG
                            )}
                          >
                            <h1
                              className={classNames(
                                projectcss.all,
                                projectcss.h1,
                                sty.h1__ftqNc
                              )}
                            >
                              <h3
                                className={classNames(
                                  projectcss.all,
                                  projectcss.h3,
                                  projectcss.__wab_text,
                                  sty.h3__p6AfD
                                )}
                              >
                                {"Lorem Ipsum"}
                              </h3>
                            </h1>

                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__mz76G
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__mwAkx
                                )}
                              >
                                {"Job title"}
                              </div>
                            </div>

                            {true ? (
                              <p.Stack
                                as={"div"}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__x9QoR
                                )}
                              >
                                <p.PlasmicLink
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.a,
                                    sty.link__te2Ns
                                  )}
                                  component={Link}
                                  platform={"nextjs"}
                                >
                                  <IconIcon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__q4Yab
                                    )}
                                    role={"img"}
                                  />
                                </p.PlasmicLink>

                                <p.PlasmicLink
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.a,
                                    sty.link__csl6F
                                  )}
                                  component={Link}
                                  platform={"nextjs"}
                                >
                                  <Icon2Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__okjEw
                                    )}
                                    role={"img"}
                                  />
                                </p.PlasmicLink>

                                <p.PlasmicLink
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.a,
                                    sty.link__zw6Qa
                                  )}
                                  component={Link}
                                  platform={"nextjs"}
                                >
                                  <Icon3Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__efXno
                                    )}
                                    role={"img"}
                                  />
                                </p.PlasmicLink>
                              </p.Stack>
                            ) : null}
                          </p.Stack>
                        </div>
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__kbq7R
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___5BfFf
                          )}
                        >
                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img__biSpX)}
                            displayHeight={"336px" as const}
                            displayMaxHeight={"none" as const}
                            displayMaxWidth={"100%" as const}
                            displayMinHeight={"0" as const}
                            displayMinWidth={"0" as const}
                            displayWidth={"100%" as const}
                            loading={"lazy" as const}
                          />

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__wIqvl
                            )}
                          >
                            <h1
                              className={classNames(
                                projectcss.all,
                                projectcss.h1,
                                sty.h1__zX1T6
                              )}
                            >
                              <h3
                                className={classNames(
                                  projectcss.all,
                                  projectcss.h3,
                                  projectcss.__wab_text,
                                  sty.h3__aSlSn
                                )}
                              >
                                {"Lorem Ipsum"}
                              </h3>
                            </h1>

                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__iIkaO
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__oh2Ko
                                )}
                              >
                                {"Job title"}
                              </div>
                            </div>

                            {true ? (
                              <p.Stack
                                as={"div"}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__tFmw
                                )}
                              >
                                <p.PlasmicLink
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.a,
                                    sty.link___4Qolr
                                  )}
                                  component={Link}
                                  platform={"nextjs"}
                                >
                                  <IconIcon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__bDzGx
                                    )}
                                    role={"img"}
                                  />
                                </p.PlasmicLink>

                                <p.PlasmicLink
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.a,
                                    sty.link___6RHrq
                                  )}
                                  component={Link}
                                  platform={"nextjs"}
                                >
                                  <Icon2Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__tr0Q
                                    )}
                                    role={"img"}
                                  />
                                </p.PlasmicLink>

                                <p.PlasmicLink
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.a,
                                    sty.link__nukN2
                                  )}
                                  component={Link}
                                  platform={"nextjs"}
                                >
                                  <Icon3Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__b6AqZ
                                    )}
                                    role={"img"}
                                  />
                                </p.PlasmicLink>
                              </p.Stack>
                            ) : null}
                          </p.Stack>
                        </div>
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__st58D
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__oDtnE
                          )}
                        >
                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img__wapNf)}
                            displayHeight={"336px" as const}
                            displayMaxHeight={"none" as const}
                            displayMaxWidth={"100%" as const}
                            displayMinHeight={"0" as const}
                            displayMinWidth={"0" as const}
                            displayWidth={"100%" as const}
                            loading={"lazy" as const}
                          />

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__cvhic
                            )}
                          >
                            <h1
                              className={classNames(
                                projectcss.all,
                                projectcss.h1,
                                sty.h1__amP7Q
                              )}
                            >
                              <h3
                                className={classNames(
                                  projectcss.all,
                                  projectcss.h3,
                                  projectcss.__wab_text,
                                  sty.h3___89OCr
                                )}
                              >
                                {"Lorem Ipsum"}
                              </h3>
                            </h1>

                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__psVLo
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___5HxpS
                                )}
                              >
                                {"Job title"}
                              </div>
                            </div>

                            {true ? (
                              <p.Stack
                                as={"div"}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__u4RZq
                                )}
                              >
                                <p.PlasmicLink
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.a,
                                    sty.link__lUfjD
                                  )}
                                  component={Link}
                                  platform={"nextjs"}
                                >
                                  <IconIcon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__ip7Az
                                    )}
                                    role={"img"}
                                  />
                                </p.PlasmicLink>

                                <p.PlasmicLink
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.a,
                                    sty.link__kouct
                                  )}
                                  component={Link}
                                  platform={"nextjs"}
                                >
                                  <Icon2Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__u4Wem
                                    )}
                                    role={"img"}
                                  />
                                </p.PlasmicLink>

                                <p.PlasmicLink
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.a,
                                    sty.link__cJcXc
                                  )}
                                  component={Link}
                                  platform={"nextjs"}
                                >
                                  <Icon3Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__c1JlB
                                    )}
                                    role={"img"}
                                  />
                                </p.PlasmicLink>
                              </p.Stack>
                            ) : null}
                          </p.Stack>
                        </div>
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column___5HXbK
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__uO2VB
                          )}
                        >
                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img__cx17J)}
                            displayHeight={"336px" as const}
                            displayMaxHeight={"none" as const}
                            displayMaxWidth={"100%" as const}
                            displayMinHeight={"0" as const}
                            displayMinWidth={"0" as const}
                            displayWidth={"100%" as const}
                            loading={"lazy" as const}
                          />

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__ssTqj
                            )}
                          >
                            <h1
                              className={classNames(
                                projectcss.all,
                                projectcss.h1,
                                sty.h1__ndMsi
                              )}
                            >
                              <h3
                                className={classNames(
                                  projectcss.all,
                                  projectcss.h3,
                                  projectcss.__wab_text,
                                  sty.h3___15Cou
                                )}
                              >
                                {"Lorem Ipsum"}
                              </h3>
                            </h1>

                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__la5Ja
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__bDu21
                                )}
                              >
                                {"Job title"}
                              </div>
                            </div>

                            {true ? (
                              <p.Stack
                                as={"div"}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__oA6Ob
                                )}
                              >
                                <p.PlasmicLink
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.a,
                                    sty.link__wjAm9
                                  )}
                                  component={Link}
                                  platform={"nextjs"}
                                >
                                  <IconIcon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__ubWwH
                                    )}
                                    role={"img"}
                                  />
                                </p.PlasmicLink>

                                <p.PlasmicLink
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.a,
                                    sty.link__h5HZe
                                  )}
                                  component={Link}
                                  platform={"nextjs"}
                                >
                                  <Icon2Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__dbnKd
                                    )}
                                    role={"img"}
                                  />
                                </p.PlasmicLink>

                                <p.PlasmicLink
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.a,
                                    sty.link___6NJts
                                  )}
                                  component={Link}
                                  platform={"nextjs"}
                                >
                                  <Icon3Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__ftsoy
                                    )}
                                    role={"img"}
                                  />
                                </p.PlasmicLink>
                              </p.Stack>
                            ) : null}
                          </p.Stack>
                        </div>
                      </div>
                    </p.Stack>
                  </div>
                </div>
              </div>
            </div>
          ) : null}

          <div className={classNames(projectcss.all, sty.freeBox__apS6G)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__txAn)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__cmNt4)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__a3Zpi)}
                >
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__hAMmo
                    )}
                  >
                    {"Our values"}
                  </h2>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__oQzg8
                    )}
                  >
                    {
                      "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,"
                    }
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__f2WYn)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"serviceRow"}
                    data-plasmic-override={overrides.serviceRow}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.serviceRow)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__sRlXn)}
                    >
                      {true ? (
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___9IdP7
                          )}
                        >
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              sty.h3__fgc6
                            )}
                          >
                            <h3
                              className={classNames(
                                projectcss.all,
                                projectcss.h3,
                                projectcss.__wab_text,
                                sty.h3__jBeql
                              )}
                            >
                              {"Value"}
                            </h3>
                          </h3>

                          {true ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__jGYfP
                              )}
                            />
                          ) : null}

                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__zTvzk
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__asK8F
                              )}
                            >
                              {
                                "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,"
                              }
                            </div>
                          </div>
                        </p.Stack>
                      ) : null}
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column__oDAb)}
                    >
                      {true ? (
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__sXs1
                          )}
                        >
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              sty.h3__yKcp4
                            )}
                          >
                            <h3
                              className={classNames(
                                projectcss.all,
                                projectcss.h3,
                                projectcss.__wab_text,
                                sty.h3__dkKqV
                              )}
                            >
                              {"Service"}
                            </h3>
                          </h3>

                          {true ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__yNB
                              )}
                            />
                          ) : null}

                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__z0NJx
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__kEvod
                              )}
                            >
                              {
                                "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,"
                              }
                            </div>
                          </div>
                        </p.Stack>
                      ) : null}
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column__pvnGo)}
                    >
                      {true ? (
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__wf5F0
                          )}
                        >
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              sty.h3__vaQ2Q
                            )}
                          >
                            <h3
                              className={classNames(
                                projectcss.all,
                                projectcss.h3,
                                projectcss.__wab_text,
                                sty.h3__qcbNw
                              )}
                            >
                              {"Value"}
                            </h3>
                          </h3>

                          {true ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__mN9C
                              )}
                            />
                          ) : null}

                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__ooaG6
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__pKzTo
                              )}
                            >
                              {
                                "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,"
                              }
                            </div>
                          </div>
                        </p.Stack>
                      ) : null}
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column__bzQmr)}
                    >
                      {true ? (
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__sUGwW
                          )}
                        >
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              sty.h3__bkep3
                            )}
                          >
                            <h3
                              className={classNames(
                                projectcss.all,
                                projectcss.h3,
                                projectcss.__wab_text,
                                sty.h3__ha2Wh
                              )}
                            >
                              {"Value"}
                            </h3>
                          </h3>

                          {true ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__qwUY
                              )}
                            />
                          ) : null}

                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__eofKn
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___1XYEj
                              )}
                            >
                              {
                                "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,"
                              }
                            </div>
                          </div>
                        </p.Stack>
                      ) : null}
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column__be72N)}
                    >
                      {true ? (
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__a0Lvh
                          )}
                        >
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              sty.h3__mXwy
                            )}
                          >
                            <h3
                              className={classNames(
                                projectcss.all,
                                projectcss.h3,
                                projectcss.__wab_text,
                                sty.h3__g29
                              )}
                            >
                              {"Value"}
                            </h3>
                          </h3>

                          {true ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__jRxvU
                              )}
                            />
                          ) : null}

                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__pik9H
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__qZ3Oo
                              )}
                            >
                              {
                                "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,"
                              }
                            </div>
                          </div>
                        </p.Stack>
                      ) : null}
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column__ejtRo)}
                    >
                      {true ? (
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__ebe7E
                          )}
                        >
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              sty.h3__fljTf
                            )}
                          >
                            <h3
                              className={classNames(
                                projectcss.all,
                                projectcss.h3,
                                projectcss.__wab_text,
                                sty.h3__uHnNh
                              )}
                            >
                              {"Value"}
                            </h3>
                          </h3>

                          {true ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__ipYCf
                              )}
                            />
                          ) : null}

                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__bdz9D
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__izS1
                              )}
                            >
                              {
                                "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,"
                              }
                            </div>
                          </div>
                        </p.Stack>
                      ) : null}
                    </div>
                  </p.Stack>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__g94Rh)}>
            <div className={classNames(projectcss.all, sty.freeBox__gzU)}>
              <div className={classNames(projectcss.all, sty.freeBox__gJ4AB)}>
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"foreground3"}
                  data-plasmic-override={overrides.foreground3}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.foreground3)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__eimSz)}
                  >
                    <h2
                      className={classNames(
                        projectcss.all,
                        projectcss.h2,
                        projectcss.__wab_text,
                        sty.h2__i7Wnw
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "Take your business to the next level"
                        : "Work with us."}
                    </h2>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vpcmh
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "Rapidiously revolutionize future-proof niches, and authoritatively \nrestore user-centric e-markets."
                        : "Lorem Ipsum is simply dummy text of the printing and typesetting industry. "}
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__zZm1Z)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__h7Vh3)}
                    >
                      <p.Stack
                        as={"button"}
                        data-plasmic-name={"button"}
                        data-plasmic-override={overrides.button}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          projectcss.button,
                          sty.button
                        )}
                      >
                        {false ? (
                          <Icon29Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__nu9TC
                            )}
                            role={"img"}
                          />
                        ) : null}

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___5J80B
                          )}
                        >
                          {"Get IN Touch"}
                        </div>

                        {false ? (
                          <Icon29Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__nvm8M
                            )}
                            role={"img"}
                          />
                        ) : null}
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
              </div>
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__mClOd)}>
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__l8Quc)}>
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"rowWrapper"}
                  data-plasmic-override={overrides.rowWrapper}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.rowWrapper)}
                >
                  <div
                    data-plasmic-name={"colmn1"}
                    data-plasmic-override={overrides.colmn1}
                    className={classNames(projectcss.all, sty.colmn1)}
                  >
                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3__gmdN
                      )}
                    >
                      {"About us"}
                    </h3>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__lgeLs
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>
                          {
                            "© Company. All rights reserved. This site proudly built with "
                          }
                        </React.Fragment>
                        {
                          <p.PlasmicLink
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              projectcss.plasmic_default__inline,
                              sty.link__pIjZ1
                            )}
                            component={Link}
                            href={"https://www.plasmic.app" as const}
                            platform={"nextjs"}
                          >
                            {"Plasmic"}
                          </p.PlasmicLink>
                        }
                        <React.Fragment>{"."}</React.Fragment>
                      </React.Fragment>
                    </div>
                  </div>

                  <div
                    data-plasmic-name={"colmn2"}
                    data-plasmic-override={overrides.colmn2}
                    className={classNames(projectcss.all, sty.colmn2)}
                  >
                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3__c9Dy5
                      )}
                    >
                      {"Links"}
                    </h3>

                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__jcQyf
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {"Services"}
                    </p.PlasmicLink>

                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__pdpEy
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {"About us"}
                    </p.PlasmicLink>

                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__fqtBt
                      )}
                      component={Link}
                      href={"#" as const}
                      platform={"nextjs"}
                    >
                      {"Testimonials"}
                    </p.PlasmicLink>

                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link___4V8YC
                      )}
                      component={Link}
                      href={"#" as const}
                      platform={"nextjs"}
                    >
                      {"Blog"}
                    </p.PlasmicLink>

                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__alkbY
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {"Contact us\n"}
                    </p.PlasmicLink>
                  </div>

                  <div
                    data-plasmic-name={"colmn22"}
                    data-plasmic-override={overrides.colmn22}
                    className={classNames(projectcss.all, sty.colmn22)}
                  >
                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3__d0Krz
                      )}
                    >
                      {"Nav Links"}
                    </h3>

                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__ga48Q
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {"Services"}
                    </p.PlasmicLink>

                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__xciDu
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {"About us"}
                    </p.PlasmicLink>

                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__pVkUy
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {"Testimonials"}
                    </p.PlasmicLink>

                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__jS8F
                      )}
                      component={Link}
                      href={"#" as const}
                      platform={"nextjs"}
                    >
                      {"Blog"}
                    </p.PlasmicLink>

                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__xPpw4
                      )}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {"Contact us\n"}
                    </p.PlasmicLink>
                  </div>

                  <div
                    data-plasmic-name={"colmn3"}
                    data-plasmic-override={overrides.colmn3}
                    className={classNames(projectcss.all, sty.colmn3)}
                  >
                    <h3
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3__fYqbh
                      )}
                    >
                      {"Contact "}
                    </h3>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___1WOre
                      )}
                    >
                      {"1234 Lorem Ipsum .\nLorem Ipsum , GA 30308"}
                    </div>

                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__gGsyr
                      )}
                      component={Link}
                      href={"#" as const}
                      platform={"nextjs"}
                    >
                      {"xyz@company.com"}
                    </p.PlasmicLink>

                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__bvCkn
                      )}
                      component={Link}
                      href={"#" as const}
                      platform={"nextjs"}
                    >
                      {"1234567890"}
                    </p.PlasmicLink>
                  </div>
                </p.Stack>
              </div>
            ) : null}
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "header",
    "aboutUs",
    "contact",
    "aboutUsBanner",
    "foreground2",
    "ourTeamSection",
    "columns",
    "container",
    "row1",
    "serviceRow",
    "foreground3",
    "button",
    "rowWrapper",
    "colmn1",
    "colmn2",
    "colmn22",
    "colmn3"
  ],
  header: ["header", "aboutUs", "contact"],
  aboutUs: ["aboutUs"],
  contact: ["contact"],
  aboutUsBanner: ["aboutUsBanner", "foreground2"],
  foreground2: ["foreground2"],
  ourTeamSection: ["ourTeamSection", "columns", "container", "row1"],
  columns: ["columns", "container", "row1"],
  container: ["container", "row1"],
  row1: ["row1"],
  serviceRow: ["serviceRow"],
  foreground3: ["foreground3", "button"],
  button: ["button"],
  rowWrapper: ["rowWrapper", "colmn1", "colmn2", "colmn22", "colmn3"],
  colmn1: ["colmn1"],
  colmn2: ["colmn2"],
  colmn22: ["colmn22"],
  colmn3: ["colmn3"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  header: "div";
  aboutUs: "a";
  contact: "div";
  aboutUsBanner: "div";
  foreground2: "div";
  ourTeamSection: "div";
  columns: "div";
  container: "div";
  row1: "div";
  serviceRow: "div";
  foreground3: "div";
  button: "button";
  rowWrapper: "div";
  colmn1: "div";
  colmn2: "div";
  colmn22: "div";
  colmn3: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicAboutus__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicAboutus__VariantsArgs;
    args?: PlasmicAboutus__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicAboutus__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicAboutus__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicAboutus__ArgProps,
          internalVariantPropNames: PlasmicAboutus__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicAboutus__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicAboutus";
  } else {
    func.displayName = `PlasmicAboutus.${nodeName}`;
  }
  return func;
}

export const PlasmicAboutus = Object.assign(
  // Top-level PlasmicAboutus renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    aboutUs: makeNodeComponent("aboutUs"),
    contact: makeNodeComponent("contact"),
    aboutUsBanner: makeNodeComponent("aboutUsBanner"),
    foreground2: makeNodeComponent("foreground2"),
    ourTeamSection: makeNodeComponent("ourTeamSection"),
    columns: makeNodeComponent("columns"),
    container: makeNodeComponent("container"),
    row1: makeNodeComponent("row1"),
    serviceRow: makeNodeComponent("serviceRow"),
    foreground3: makeNodeComponent("foreground3"),
    button: makeNodeComponent("button"),
    rowWrapper: makeNodeComponent("rowWrapper"),
    colmn1: makeNodeComponent("colmn1"),
    colmn2: makeNodeComponent("colmn2"),
    colmn22: makeNodeComponent("colmn22"),
    colmn3: makeNodeComponent("colmn3"),

    // Metadata about props expected for PlasmicAboutus
    internalVariantProps: PlasmicAboutus__VariantProps,
    internalArgProps: PlasmicAboutus__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicAboutus;
/* prettier-ignore-end */
